"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[693],{79018:function(e){e.exports=JSON.parse('{"functions":[{"name":"map","desc":"Maps over entities that satisfy the [`Query`](/api/World#Query). Calls the callback\\nfor each entity, passing each entity followed by the components named in the\\n[`Query`](/api/World#Query), and replaces the components in\\n[`Query.withAll`](/api/World#Query) with the callback\'s return value. The replacement\\nis equivalent a [`Registry:replaceComponent`](/api/Registry#replaceComponent) call.\\n\\n:::warning\\nAdding or removing any of the components named in [`Query.withAll`](/api/World#Query)\\nis forbidden inside of the callback. There are currently no protections against this,\\nso be careful!","params":[{"name":"callback","desc":"","lua_type":"(entity: number, ...any) -> ...any"}],"returns":[],"function_type":"method","source":{"line":56,"path":"lib/src/World/Mapper.lua"}},{"name":"each","desc":"Iterates over all entities that satisfy the `Query`. Calls the callback for each\\nentity, passing each entity followed by the components named in the `Query`.\\n\\n:::warning\\nAdding or removing any of the components named in [`Query.withAll`](/api/World#Query)\\nis forbidden inside of the callback. There are currently no protections against this,\\nso be careful!","params":[{"name":"callback","desc":"","lua_type":"(entity: number, ...any) -> ()"}],"returns":[],"function_type":"method","source":{"line":79,"path":"lib/src/World/Mapper.lua"}}],"properties":[],"types":[],"name":"Mapper","desc":"Provides scoped access to a [`Registry`](/api/Registry) according to a\\n[`Query`](/api/World#Query).\\n\\nA `Mapper` is stateless. In contrast to a [`Reactor`](/api/Reactor), a `Mapper` cannot\\ntrack updates to components with [`Query.withUpdated`](/api/World#Query).\\n\\nYou can create a `Mapper` using [`World:getMapper`](/api/World#getMapper).","source":{"line":12,"path":"lib/src/World/Mapper.lua"}}')}}]);